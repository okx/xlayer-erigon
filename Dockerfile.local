# syntax = docker/dockerfile:1.2
FROM alpine:latest AS rocksdb-builder
RUN apk --no-cache add \
    build-base \
    linux-headers \
    git \
    bash \
    perl \
    snappy-dev \
    zlib-dev \
    bzip2-dev \
    lz4-dev \
    zstd-dev \
    gflags-dev \
    bzip2


RUN git clone --depth 1 -b 9.8.fb https://github.com/facebook/rocksdb.git /rocksdb \
    && cd /rocksdb \
    && make -j$(nproc) shared_lib \
    && cp librocksdb.* /usr/lib/ \
    && cp -r include/rocksdb /usr/include/

FROM docker.io/library/golang:1.21-alpine3.17 AS builder

RUN apk --no-cache add build-base linux-headers git bash ca-certificates libstdc++

WORKDIR /app
COPY --from=rocksdb-builder /usr/lib/librocksdb.* /usr/lib/
COPY --from=rocksdb-builder /usr/include/rocksdb /usr/include/rocksdb
COPY --from=rocksdb-builder /usr/lib/libzstd.so* /usr/lib/
COPY --from=rocksdb-builder /usr/lib/liblz4.so* /usr/lib/
COPY --from=rocksdb-builder /usr/lib/libz.so* /usr/lib/
COPY --from=rocksdb-builder /usr/lib/libsnappy.so* /usr/lib/
COPY --from=rocksdb-builder /usr/lib/libbz2.so.1 /usr/lib

ADD go.mod go.mod
ADD go.sum go.sum
ADD erigon-lib/go.mod erigon-lib/go.mod
ADD erigon-lib/go.sum erigon-lib/go.sum

RUN go mod download
ADD . .

RUN --mount=type=cache,target=/root/.cache \
    --mount=type=cache,target=/tmp/go-build \
    --mount=type=cache,target=/go/pkg/mod \
    make BUILD_TAGS=nosqlite,noboltdb,nosilkworm cdk-erigon

FROM docker.io/library/golang:1.21-alpine3.17 AS tools-builder
RUN apk --no-cache add build-base linux-headers git bash ca-certificates libstdc++
WORKDIR /app

ADD Makefile Makefile
ADD tools.go tools.go
ADD go.mod go.mod
ADD go.sum go.sum
ADD erigon-lib/go.mod erigon-lib/go.mod
ADD erigon-lib/go.sum erigon-lib/go.sum

RUN mkdir -p /app/build/bin

RUN --mount=type=cache,target=/root/.cache \
    --mount=type=cache,target=/tmp/go-build \
    --mount=type=cache,target=/go/pkg/mod \
    make db-tools

FROM docker.io/library/alpine:3.17

# install required runtime libs, along with some helpers for debugging
RUN apk add --no-cache ca-certificates libstdc++ tzdata
RUN apk add --no-cache curl jq bind-tools

RUN mkdir -p ~/.local/share/erigon
WORKDIR /home/erigon

## then give each binary its own layer
COPY --from=builder /app/build/bin/cdk-erigon /usr/local/bin/cdk-erigon
COPY --from=rocksdb-builder /usr/lib/librocksdb.* /usr/lib/
COPY --from=rocksdb-builder /usr/lib/liblz4.so* /usr/lib/
COPY --from=rocksdb-builder /usr/lib/libsnappy.so* /usr/lib/
COPY --from=rocksdb-builder /usr/lib/libbz2.so* /usr/lib
COPY --from=rocksdb-builder /usr/lib/libzstd.so* /usr/lib/
COPY --from=rocksdb-builder /usr/lib/libbz2.so* /usr/lib
COPY --from=rocksdb-builder /usr/lib/libgflags.so* /usr/lib/



EXPOSE 8545 \
       8551 \
       8546 \
       30303 \
       30303/udp \
       42069 \
       42069/udp \
       8080 \
       9090 \
       6060

# https://github.com/opencontainers/image-spec/blob/main/annotations.md
ARG BUILD_DATE
ARG VCS_REF
ARG VERSION
LABEL org.label-schema.build-date=$BUILD_DATE \
      org.label-schema.description="Erigon ZKEVM Client" \
      org.label-schema.name="ZKEVM Erigon" \
      org.label-schema.schema-version="1.0" \
      org.label-schema.url="https://torquem.ch" \
      org.label-schema.vcs-ref=$VCS_REF \
      org.label-schema.vcs-url="https://github.com/0xPolygonHermez/cdk-erigon.git" \
      org.label-schema.vendor="Torquem" \
      org.label-schema.version=$VERSION

