version: "3.5"
networks:
  default:
    name: erigon
services:
  xlayer-executor:
    container_name: xlayer-executor
    image: hermeznetwork/zkevm-prover:v9.0.0-RC1-fork.13
    platform: linux/amd64
    environment:
      - EXPERIMENTAL_DOCKER_DESKTOP_FORCE_QEMU=1
    ports:
      - 0.0.0.0:50061:50061 # MT
      - 0.0.0.0:50071:50071 # Executor
    volumes:
      - ./config/test.stateless_executor.config.json:/usr/src/app/config.json
    command: >
      zkProver -c /usr/src/app/config.json

  xlayer-seqs:
    container_name: xlayer-seqs
    image: zjg555543/cdk:v0.4.0-beta10
    volumes:
      - ./data/seqs:/tmp/cdk
      - ./keystore/da.permit.keystore:/pk/da.permit.keystore
      - ./keystore/sequencer.keystore:/pk/sequencer.keystore
      - ./config/cdk.config.toml:/app/config.toml
      - ./config/test.genesis.config.json:/app/genesis.json
    command:
      - "/bin/sh"
      - "-c"
      - "/usr/local/bin/cdk-node run --cfg /app/config.toml --custom-network-file /app/genesis.json --components sequence-sender"

  xlayer-agg:
    container_name: xlayer-agg
    image: zjg555543/cdk:v0.4.0-beta10
    ports:
      - 50081:50081
    volumes:
      - ./data/agg:/tmp/cdk
      - ./keystore/aggregator.keystore:/pk/aggregator.keystore
      - ./config/cdk.config.toml:/app/config.toml
      - ./config/test.genesis.config.json:/app/genesis.json
    command:
      - "/bin/sh"
      - "-c"
      - "/usr/local/bin/cdk-node run --cfg /app/config.toml --custom-network-file /app/genesis.json  --components aggregator"

  xlayer-agg-db:
    container_name: xlayer-agg-db
    image: postgres:15
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    ports:
      - 5434:5432
    environment:
      - POSTGRES_USER=aggregator_user
      - POSTGRES_PASSWORD=aggregator_password
      - POSTGRES_DB=aggregator_db
    command:
      - "postgres"
      - "-N"
      - "500"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aggregator_user -d aggregator_db"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  xlayer-prover:
    container_name: xlayer-prover
    image: hermeznetwork/zkevm-prover:v9.0.0-RC1-fork.13
    platform: linux/amd64
    environment:
      - EXPERIMENTAL_DOCKER_DESKTOP_FORCE_QEMU=1
    volumes:
      - ./config/test.prover.config.json:/usr/src/app/config.json
    command: >
      zkProver -c /usr/src/app/config.json

  xlayer-approve:
    container_name: xlayer-approve
    image: hermeznetwork/zkevm-node:v0.6.6
    volumes:
      - ./keystore/sequencer.keystore:/pk/keystore
      - ./config/test.node.config.toml:/app/config.toml
      - ./config/test.genesis.config.json:/app/genesis.json
    command:
      - "/bin/sh"
      - "-c"
      - "/app/zkevm-node approve --network custom --custom-network-file /app/genesis.json --key-store-path /pk/keystore --pw testonly --am 115792089237316195423570985008687907853269984665640564039457584007913129639935 -y --cfg /app/config.toml"

  xlayer-seq:
    container_name: xlayer-seq
    image: cdk-erigon
    environment:
      - CDK_ERIGON_SEQUENCER=1
    ports:
      - 6060:6060
      - 8123:8545
      - 6900:6900
      - 9092:9095
    volumes:
      - ./data/seq/:/home/erigon/data/
      - ./config/test.erigon.seq.config.yaml:/usr/src/app/config.yaml
      - ./config/dynamic-mynetwork-allocs.json:/usr/src/app/dynamic-mynetwork-allocs.json
      - ./config/dynamic-mynetwork-chainspec.json:/usr/src/app/dynamic-mynetwork-chainspec.json
      - ./config/dynamic-mynetwork-conf.json:/usr/src/app/dynamic-mynetwork-conf.json
    command: >
      cdk-erigon --zkevm.l1-cache-enabled=true --http.vhosts=* --http.corsdomain=* --ws --config=/usr/src/app/config.yaml

  xlayer-seq-resequence:
    container_name: xlayer-seq-resequence
    image: cdk-erigon
    environment:
      - CDK_ERIGON_SEQUENCER=1
    ports:
      - 6060:6060
      - 8123:8545
      - 6900:6900
      - 9092:9095
    volumes:
      - ./data/seq/:/home/erigon/data/
      - ./config/test.erigon.seq.config.yaml:/usr/src/app/config.yaml
      - ./config/dynamic-mynetwork-allocs.json:/usr/src/app/dynamic-mynetwork-allocs.json
      - ./config/dynamic-mynetwork-chainspec.json:/usr/src/app/dynamic-mynetwork-chainspec.json
      - ./config/dynamic-mynetwork-conf.json:/usr/src/app/dynamic-mynetwork-conf.json
    command: >
      cdk-erigon --zkevm.l1-cache-enabled=true --zkevm.sequencer-resequence=true --http.vhosts=* --http.corsdomain=* --ws --config=/usr/src/app/config.yaml

  xlayer-seq-recover:
    container_name: xlayer-seq-recover
    image: cdk-erigon
    environment:
      - CDK_ERIGON_SEQUENCER=1
    ports:
      - 6060:6060
      - 8123:8545
      - 6900:6900
      - 9092:9095
    volumes:
      - ./data/seq/:/home/erigon/data/
      - ./config/test.erigon.seq.config.yaml:/usr/src/app/config.yaml
      - ./config/dynamic-mynetwork-allocs.json:/usr/src/app/dynamic-mynetwork-allocs.json
      - ./config/dynamic-mynetwork-chainspec.json:/usr/src/app/dynamic-mynetwork-chainspec.json
      - ./config/dynamic-mynetwork-conf.json:/usr/src/app/dynamic-mynetwork-conf.json
    command: >
      cdk-erigon --zkevm.l1-cache-enabled=true --zkevm.l1-sync-start-block=353 --zkevm.da-url=http://xlayer-da:8444 --http.vhosts=* --http.corsdomain=* --ws --config=/usr/src/app/config.yaml

  xlayer-seq-unwind:
    container_name: xlayer-seq-unwind
    image: cdk-erigon
    environment:
      - CDK_ERIGON_SEQUENCER=1
    volumes:
      - ./data/seq/:/home/erigon/data/
      - ./config/test.erigon.seq.config.yaml:/usr/src/app/config.yaml
      - ./config/dynamic-mynetwork-allocs.json:/usr/src/app/dynamic-mynetwork-allocs.json
      - ./config/dynamic-mynetwork-chainspec.json:/usr/src/app/dynamic-mynetwork-chainspec.json
      - ./config/dynamic-mynetwork-conf.json:/usr/src/app/dynamic-mynetwork-conf.json
    command: >
      integration state_stages_zkevm --config=/usr/src/app/config.yaml --chain dynamic-mynetwork --datadir /home/erigon/data/ --unwind-batch-no=1

  xlayer-rpc:
    container_name: xlayer-rpc
    image: cdk-erigon
    environment:
      - CDK_ERIGON_SEQUENCER=0
    ports:
      - 6061:6060
      - 8124:8545
      - 6901:6900
      - 9091:9095
    volumes:
      - ./data/rpc/:/home/erigon/data/
      - ./config/test.erigon.rpc.config.yaml:/usr/src/app/config.yaml
      - ./config/dynamic-mynetwork-allocs.json:/usr/src/app/dynamic-mynetwork-allocs.json
      - ./config/dynamic-mynetwork-chainspec.json:/usr/src/app/dynamic-mynetwork-chainspec.json
      - ./config/dynamic-mynetwork-conf.json:/usr/src/app/dynamic-mynetwork-conf.json
    command: >
      cdk-erigon --http.vhosts=* --http.corsdomain=* --ws --config=/usr/src/app/config.yaml

  xlayer-lrp:
    container_name: xlayer-lrp
    image: cdk-erigon
    environment:
      - CDK_ERIGON_SEQUENCER=0
    ports:
      - 6062:6060
      - 8126:8545
      - 6902:6900
      - 9093:9095
    volumes:
      - ./data/lrp/:/home/erigon/data/
      - ./config/test.erigon.rpc.config.yaml:/usr/src/app/config.yaml
      - ./config/dynamic-mynetwork-allocs.json:/usr/src/app/dynamic-mynetwork-allocs.json
      - ./config/dynamic-mynetwork-chainspec.json:/usr/src/app/dynamic-mynetwork-chainspec.json
      - ./config/dynamic-mynetwork-conf.json:/usr/src/app/dynamic-mynetwork-conf.json
    command: >
      cdk-erigon --http.vhosts=* --http.corsdomain=* --ws --config=/usr/src/app/config.yaml

  xlayer-lrp-unwind:
    container_name: xlayer-lrp-unwind
    image: cdk-erigon
    environment:
      - CDK_ERIGON_SEQUENCER=0
    volumes:
      - ./data/lrp/:/home/erigon/data/
      - ./config/test.erigon.rpc.config.yaml:/usr/src/app/config.yaml
      - ./config/dynamic-mynetwork-allocs.json:/usr/src/app/dynamic-mynetwork-allocs.json
      - ./config/dynamic-mynetwork-chainspec.json:/usr/src/app/dynamic-mynetwork-chainspec.json
      - ./config/dynamic-mynetwork-conf.json:/usr/src/app/dynamic-mynetwork-conf.json
    command: >
      integration state_stages_zkevm --config=/usr/src/app/config.yaml --chain dynamic-mynetwork --datadir /home/erigon/data/ --unwind-batch-no=1

  xlayer-lrp-resequence:
    container_name: xlayer-lrp-resequence
    image: cdk-erigon
    environment:
      - CDK_ERIGON_SEQUENCER=1
    ports:
      - 6062:6060
      - 8126:8545
      - 6902:6900
      - 9093:9095
    volumes:
      - ./data/lrp/:/home/erigon/data/
      - ./config/test.erigon.seq.config.yaml:/usr/src/app/config.yaml
      - ./config/dynamic-mynetwork-allocs.json:/usr/src/app/dynamic-mynetwork-allocs.json
      - ./config/dynamic-mynetwork-chainspec.json:/usr/src/app/dynamic-mynetwork-chainspec.json
      - ./config/dynamic-mynetwork-conf.json:/usr/src/app/dynamic-mynetwork-conf.json
    command: >
      cdk-erigon --zkevm.l1-cache-enabled=true --zkevm.sequencer-resequence=true --http.vhosts=* --http.corsdomain=* --ws --config=/usr/src/app/config.yaml

  xlayer-mock-l1-network:
    container_name: xlayer-mock-l1-network
    image: zjg555543/geth:fork13-v0.0.3
    ports:
      - 8545:8545
      - 8546:8546
    command:
      - "--http"
      - "--http.api"
      - "admin,eth,debug,miner,net,txpool,personal,web3"
      - "--http.addr"
      - "0.0.0.0"
      - "--http.corsdomain"
      - "*"
      - "--http.vhosts"
      - "*"
      - "--ws"
      - "--ws.origins"
      - "*"
      - "--ws.addr"
      - "0.0.0.0"
      - "--dev"
      - "--dev.period"
      - "1"
      - "--datadir"
      - "/geth_data"
      - "--syncmode"
      - "full"
      - "--rpc.allow-unprotected-txs"

  xlayer-da:
    container_name: xlayer-da
    image: zjg555543/xlayer-da:merge-v0.0.10
    ports:
      - 8444:8444
    volumes:
      - ./config/test.da.toml:/app/config.toml
      - ./keystore/test-member.keystore:/pk/test-member.keystore
    command:
      - "/bin/sh"
      - "-c"
      - "/app/xlayer-data-availability run --cfg /app/config.toml"

  xlayer-da-db:
    container_name: xlayer-da-db
    image: postgres:15
    ports:
      - 5438:5432
    environment:
      - POSTGRES_USER=committee_user
      - POSTGRES_PASSWORD=committee_password
      - POSTGRES_DB=committee_db
    command:
      - "postgres"
      - "-N"
      - "500"

  xlayer-pool-db:
    container_name: xlayer-pool-db
    image: postgres:15
    ports:
      - 5440:5432
    volumes:
      - /var/lib/postgresql/data
    environment:
      - POSTGRES_USER=pool_user
      - POSTGRES_PASSWORD=pool_password
      - POSTGRES_DB=pool_db
    command:
      - "postgres"
      - "-N"
      - "500"

  xlayer-pool-manager:
    container_name: xlayer-pool-manager
    image: hermeznetwork/zkevm-pool-manager:v0.1.0-RC1
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    ports:
      - 8125:8545
    volumes:
      - ./config/test.poolmanager.toml:/app/poolmanager.toml
    command:
      - "/bin/sh"
      - "-c"
      - "/app/zkevm-pool-manager run --cfg /app/poolmanager.toml"

  xlayer-bridge-db:
    container_name: xlayer-bridge-db
    image: postgres:15
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    ports:
      - 5439:5432
    environment:
      - POSTGRES_USER=test_user
      - POSTGRES_PASSWORD=test_password
      - POSTGRES_DB=test_db
    command: [ "postgres", "-N", "500" ]

  xlayer-bridge-redis:
    container_name: xlayer-bridge-redis
    image: redis
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    expose:
      - 6379
    ports:
      - 6379:6379
    environment:
      - REDIS_PASSWORD=my_password
      - REDIS_PORT=6379
      - REDIS_DATABASES=8

  kafka-zookeeper:
    image: wurstmeister/zookeeper
    container_name: kafka-zookeeper
    ports:
      - "2181:2181"
    expose:
      - 2181

  xlayer-bridge-coin-kafka:
    image: wurstmeister/kafka
    container_name: xlayer-bridge-coin-kafka
    expose:
      - 9092
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://localhost:9123
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9123
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: kafka-zookeeper:2181
      KAFKA_CREATE_TOPICS: "explorer_chainAddressPrice_push:1:1"

  xlayer-bridge-service:
    container_name: xlayer-bridge-service
    image: zjg555543/xlayer-bridge-service:v0.3.1_17ef00f
    ports:
      - 8080:8080
      - 9090:9090
    environment:
      - ZKEVM_BRIDGE_DATABASE_USER=test_user
      - ZKEVM_BRIDGE_DATABASE_PASSWORD=test_password
      - ZKEVM_BRIDGE_DATABASE_NAME=test_db
      - ZKEVM_BRIDGE_DATABASE_HOST=xlayer-bridge-db
      - ZKEVM_BRIDGE_DATABASE_PORT=5432
    volumes:
      - ./keystore/sequencer.keystore:/pk/keystore.claimtxmanager
      - ./config/test.bridge.config.toml:/app/config.toml
      - ./config/test.sentinel.config.json:/app/sentinel_config.json
    command:
      - "/bin/sh"
      - "-c"
      - "/app/xlayer-bridge run --cfg /app/config.toml"

  xlayer-bridge-ui:
    container_name: xlayer-bridge-ui
    image: hermeznetwork/zkevm-bridge-ui:latest
    ports:
      - 8090:80
    environment:
      - ETHEREUM_RPC_URL=http://127.0.0.1:8545
      - ETHEREUM_EXPLORER_URL=http://127.0.0.1:4000
      - ETHEREUM_ROLLUP_MANAGER_ADDRESS=0x2d42E2899662EFf08b13eeb65b154b904C7a1c8a
      - ETHEREUM_BRIDGE_CONTRACT_ADDRESS=0x3a277Fa4E78cc1266F32E26c467F99A8eAEfF7c3
      - ETHEREUM_FORCE_UPDATE_GLOBAL_EXIT_ROOT=true
      - ETHEREUM_PROOF_OF_EFFICIENCY_CONTRACT_ADDRESS=0xeb173087729c88a47568AF87b17C653039377BA6
      - POLYGON_ZK_EVM_RPC_URL=http://127.0.0.1:8123
      - POLYGON_ZK_EVM_EXPLORER_URL=http://127.0.0.1:4001
      - POLYGON_ZK_EVM_BRIDGE_CONTRACT_ADDRESS=0x3a277Fa4E78cc1266F32E26c467F99A8eAEfF7c3
      - POLYGON_ZK_EVM_NETWORK_ID=1
      - BRIDGE_API_URL=http://127.0.0.1:8080
      - ENABLE_FIAT_EXCHANGE_RATES=false
      - ENABLE_OUTDATED_NETWORK_MODAL=false
      - ENABLE_DEPOSIT_WARNING=true
      - ENABLE_REPORT_FORM=false
      - USE_FIAT_EXCHANGE_RATES=false
      - SHOW_OUTDATED_NETWORK_MODAL=false

  xlayer-signer:
    container_name: xlayer-signer
    restart: unless-stopped
    image: zjg555543/xlayer-signer:v0.4.1
    ports:
      - 7001:7001
    volumes:
      - ./config/signer.config.toml:/app/config.toml
      - ./keystore/sequencer.keystore:/pk/sequencer.keystore
      - ./keystore/aggregator.keystore:/pk/aggregator.keystore
    command:
      - "/bin/sh"
      - "-c"
      - "/app/xlayer-signer http -cfg /app/config.toml"

  xlayer-ds:
    container_name: xlayer-ds
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    image: zjg555543/xlayer-ds:basedev-merge-upstream-v0.2.7
    ports:
      - 7900:7900
    volumes:
#      - ./data/ds/:/home/dsrelay/
      - ./config/ds-config.toml:/app/config.toml
    command:
      - "/bin/sh"
      - "-c"
      - "/app/dsrelay --cfg /app/config.toml"

  prometheus:
    image: prom/prometheus:v2.51.2
    user: ${DOCKER_UID:-1000}:${DOCKER_GID:-1000} # Uses erigon user from Dockerfile
    command: --log.level=warn --config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus --storage.tsdb.retention.time=150d --web.console.libraries=/usr/share/prometheus/console_libraries --web.console.templates=/usr/share/prometheus/consoles
    ports:
      - 9099:9090
    volumes:
      - ../cmd/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ${XDG_DATA_HOME:-~/.local/share}/erigon-prometheus:/prometheus
    restart: unless-stopped

  grafana:
    image: grafana/grafana:10.4.2
    user: "472:0" # required for grafana version >= 7.3
    ports:
      - 3000:3000
    volumes:
      - ../cmd/prometheus/datasources:/etc/grafana/provisioning/datasources
      - ../cmd/prometheus/dashboards:/etc/grafana/provisioning/dashboards
      - ${XDG_DATA_HOME:-~/.local/share}/erigon-grafana:/var/lib/grafana
    restart: unless-stopped

  xlayer-mainnet-seq:
    container_name: xlayer-seq
    image: cdk-erigon
    environment:
      - CDK_ERIGON_SEQUENCER=1
    ports:
      - 6060:6060
      - 8123:8545
      - 6900:6900
      - 9092:9095
    volumes:
      - ./mainnet/seq:/home/erigon/data/
      - ./config/xlayerconfig-mainnet.yaml:/usr/src/app/config.yaml
    command: >
      cdk-erigon --http.vhosts=* --http.corsdomain=* --ws --config=/usr/src/app/config.yaml

